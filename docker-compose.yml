services:
  library:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - library-logs:/app/logs
    ports:
      - "${GRPC_GATEWAY_PORT}:${GRPC_GATEWAY_PORT}"
      - "${GRPC_PORT}:${GRPC_PORT}"
    networks:
      - internal

  postgres:
    image: postgres:latest
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - library-logs:/var/log
      - ./infra/promtail/config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - internal

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - internal

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./infra/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    networks:
      - internal

volumes:
  postgres-data:
  library-logs:
  grafana-storage:

networks:
  internal:
    driver: bridge
